// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;

import model.Compte;
import model.Role;
import outils.ConnectionDB;

/************************************************************/
/**
 * 
 */
public class DaoRole implements Dao<Role> {

	
	private Connection c;
	private ConnectionDB conn;
	private Statement stmt;
	private PreparedStatement pstmt;
	private ResultSet rs;
	
	public DaoRole() {
		conn = new ConnectionDB();
		this.c = conn.getConnectionDB();
	}
	
	@Override
	public int create(Role t) {
		int res = 0;
		String insert = "INSERT INTO roles (lib_role) VALUES ("
				//+ "'" + t.getId_role() + "', "
				+ "'" + t.getLibelle_role() + "'"
				+ ");";
		try {
			stmt = c.createStatement();
			res = stmt.executeUpdate(insert);
		} catch (SQLException ex) {
			// TODO Auto-generated catch block
			ex.printStackTrace();
		}
		return res;
	}

	/**
	 * read role by its  id
	 */
	@Override
	public Role read(Role t) {
		try {
			stmt = c.createStatement();
			String read = "SELECT * FROM roles WHERE id_role =" + t.getId_role();
			rs = stmt.executeQuery(read);
			
			while(rs.next()) {
//				System.out.println(rs.getInt("id_role"));
//				System.out.println(rs.getString("lib_role"));

				t.setId_role((rs.getInt("id_role")));
				t.setLibelle_role((rs.getString("lib_role")));

			}
			
		} catch (SQLException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		return t;
	}

	/**
	 * update role by its id
	 */
	@Override
	public int update(Role t) {
		int r = 0;

		try {
			System.out.println(c.toString());
			stmt = c.createStatement();
			
			String update = "UPDATE roles SET " 
					//+ "id_role= '" + t.getId_role()+ "', "
					+ "lib_role= '" + t.getLibelle_role() + "'"
					+ "WHERE id_role = " + t.getId_role() + "";
			
			r = stmt.executeUpdate(update);
		} catch (SQLException ex) {
			// TODO Auto-generated catch block
			ex.printStackTrace();
		}

		return r;
	}

	/**
	 * delete role by its id
	 */
	@Override
	public int delete(Role t) {
		int r = 0;
		try {
			stmt = c.createStatement();
			String delete = "DELETE FROM roles WHERE id_role = "  
							+ "'" + t.getId_role() + "'" 
								+ " AND lib_role = " + "'" + t.getLibelle_role() + "'" + ";";
			System.out.println(delete);
			r = stmt.executeUpdate(delete);
			System.out.println(r);
		} catch (SQLException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		return r;
	}

	@Override
	public List<Role> readAll() {
		ArrayList<Role> list = new ArrayList<>();
		try {
			stmt = c.createStatement();
			String select = "SELECT * FROM roles;";
			rs = stmt.executeQuery(select);
			
			while(rs.next()) {
				Role t = new Role();
				t.setId_role((rs.getInt("id_role")));
				t.setLibelle_role((rs.getString("lib_role")));

				//System.out.println(compte.toString());
				list.add(t);
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return list;
	}
	

}
